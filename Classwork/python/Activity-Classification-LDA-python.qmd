---
title: "Classification: LDA and QDA"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
jupyter: python3
---

## Setup

Declare your libraries:


```{python}
#| label: libraries-py
#| include: false
import pandas as pd

import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.neighbors import KNeighborsRegressor, KNeighborsClassifier

from sklearn.metrics import r2_score, confusion_matrix

from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import make_column_transformer
from sklearn.pipeline import Pipeline, make_pipeline

from sklearn.model_selection import cross_val_score, GridSearchCV, KFold

from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
```

# LDA


```{python}
ins = pd.read_csv("https://www.dropbox.com/s/bocjjyo1ehr5auz/insurance.csv?dl=1")
ins.head()
```

```{python}
ins["smoker"] = ins["smoker"].astype("category")
ins = ins.dropna()
```


```{python}
lda_mod = LinearDiscriminantAnalysis()
```


```{python}
lda_mod.fit(ins[["charges"]], ins["smoker"])

lda_mod.coef_
lda_mod.scalings_
```


```{python}
preds = lda_mod.predict(ins[["charges"]])

(preds == ins["smoker"]).mean()

```


```{python}
lda_mod_2 = LinearDiscriminantAnalysis()

lda_mod_2.fit(ins[["charges", "age"]], ins["smoker"])

lda_mod_2.coef_
lda_mod_2.scalings_
```

```{python}
sns.lmplot( x="charges", y="age", data=ins, fit_reg=False, hue='smoker', legend=False)

plt.legend(loc='lower right')
plt.show()
```

```{python}

slope = lda_mod_2.scalings_[0]/(-1*lda_mod_2.scalings_[1])

sns.lmplot( x="charges", y="age", data=ins, fit_reg=False, hue='smoker', legend=False)
plt.plot([500, 20000], [slope*500, slope*20000], linewidth=2)

plt.legend(loc='lower right')
plt.show()

```





#### Your turn:

Use cross-validation to find the best LDA model to predict smoker status.

How does it compare to the Logistic Regression and KNN approaches?

# Quadratic Discriminant Analysis

#### Code:


```{python}
qda_mod = QuadraticDiscriminantAnalysis()
```

#### Your turn:

Use Cross-Validation to find the best QDA model to predict smoker status.

How does it compare to the LDA, Logistic Regression, and KNN approaches?

# Metrics

https://yardstick.tidymodels.org/articles/metric-types.html

