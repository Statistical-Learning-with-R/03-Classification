---
title: "Classification: KNN and Logistic Regression"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
    self-contained: true
editor: visual
execute:
  message: false
---

## Setup

Declare your libraries:

```{r}
#| label: libraries-r
#| include: false
library(tidyverse)
library(tidymodels)
library(glmnet)
```


## KNN

#### Code from Lecture

```{r}
ins <- read_csv("https://www.dropbox.com/s/bocjjyo1ehr5auz/insurance.csv?dl=1")
head(ins)
```


```{r}
ins <- ins %>%
  mutate(
    smoker = factor(smoker)
  ) %>%
  drop_na()
```


```{r}
knn_mod <- nearest_neighbor(neighbors = 5) %>%
  set_engine("kknn") %>%
  set_mode("classification")
```

```{r}
recipe_1 <- recipe(smoker ~ charges, data = ins)

workflow_1 <- workflow() %>%
  add_model(knn_mod) %>%
  add_recipe(recipe_1)
```

```{r}
knn_fit_1 <- workflow_1 %>%
  fit(ins)

knn_fit_1$fit %>% extract_fit_parsnip()
```

```{r}
ins %>%
  mutate(
    preds = predict(knn_fit_1, ins)$.pred_class
  ) %>%
  conf_mat(truth = smoker,
           estimate = preds)
```



#### Your tasks

Select the best KNN model for predicting smoker status
What metrics does the cross-validation process automatically output?

## Logistic Regression

#### Code from lecture:

```{r}
logit_mod <- logistic_reg() %>%
  set_mode("classification") %>%
  set_engine("glm")
```





```{r}
rec_2 <- recipe(smoker ~ charges, data = ins) %>%
  step_normalize(all_numeric_predictors())

ins_wflow_logit <- workflow() %>%
  add_recipe(rec_2) %>%
  add_model(logit_mod)

ins_fit <- ins_wflow_logit %>%
  fit(ins)

ins_fit %>% pull_workflow_fit() %>% tidy()
```

```{r}
preds <- ins_fit %>% predict(ins)
preds
```

```{r}
ins_fit %>% predict(ins, type = "raw")
```

```{r}
ins_fit %>% predict(ins, type = "prob")
```

```{r}
pred_probs = ins_fit %>% predict(ins, type = "prob")

ins %>%
  mutate(
    pred_probs = pred_probs$.pred_yes
  ) %>%
  ggplot(aes(y = pred_probs, x = charges, color = smoker)) +
  geom_point()
```

```{r}
ins <- ins %>%
  mutate(
    predicted_smoker = predict(ins_fit, ins)$.pred_class
  ) 

ins %>%
  conf_mat(truth = smoker,
                   estimate = predicted_smoker)
```

What percentage did we get correct?

```{r}
ins %>%
  accuracy(truth = smoker,
           estimate = predicted_smoker)
```

#### Your tasks

Select the best logistic regression model for predicting smoker status
Report the cross-validated metrics - how do they compare to KNN?

